name: CI

on:
  push:
    tags:
      - 'v\d+\.?\d+\.?\d+\.?'

  workflow_dispatch:

env:
    DOTNETVERSION: 7.0.x
    OSX_SCRIPTS_DIR: scripts/macos/
    OSX_APP_DIR: src/LogVisualizer/bin/Release/net6.0/osx-x64/
    OSX_APP_Name: LogVisualizer.app
    OSX_APP_ZIP_Name: osx-x64.zip
    WIN_SCRIPTS_DIR: scripts/windows/
    WIN_APP_DIR: src/LogVisualizer/bin/Release/net6.0/win-x64/publish/
    WIN_APP_Name: LogVisualizer.exe
    WIN_APP_ZIP_Name: win-x64.zip
    UPGRADE_INFO_PATH: upgradeInfo.json

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v1.9.0
        with:
          dotnet-version: ${{env.DOTNETVERSION}}

      - name: Install 7Zip PowerShell Module
        shell: powershell
        run: Install-Module 7Zip4PowerShell -Force -Verbose

      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Initialize submodules
        run: git submodule update --init --recursive

      - name: Install localization package
        run: npm install -g i18n-auto-translation-msnyder

      - name: Translate files
        id: translate
        uses: msnyder-msft/i18n-auto-translation-action@v1.0.1
        with:
            provider: 'azure-official'
            subscriptionKey: '${{ secrets.AZURE_TRANSLATION_API_KEY }}'
            location: 'westus2'
            filePath: './src/LogVisualizer.I18N/I18NResources/en.json'
            from: 'en'
            to: 'zh'
            debug: false

      - name: Extract version from tag
        uses: damienaicheh/extract-version-from-tag-action@v1.1.0
      
      - name: Build win-x64
        run: |
          chmod +x ${{env.WIN_SCRIPTS_DIR}}build.sh
          sh ${{env.WIN_SCRIPTS_DIR}}build.sh '${{ env.MAJOR }}.${{ env.MINOR }}.${{ env.PATCH }}.${{ env.NUMBER_OF_COMMITS }}'

      - name: Zip win-x64 build
        shell: powershell
        run: Compress-7Zip ${{ env.WIN_APP_DIR }}${{ env.WIN_APP_Name }} -ArchiveFileName ./${{env.WIN_APP_ZIP_Name}} -Format Zip
      
      - name: Upload windows artifact
        uses: actions/upload-artifact@v2
        with:
          name: windows-Build
          path: ./${{env.WIN_APP_ZIP_Name}}

  build-macos:
    runs-on: macos-latest
    steps:
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v1.9.0
        with:
          dotnet-version: ${{env.DOTNETVERSION}}

      - name: Import certificate
        uses: apple-actions/import-codesign-certs@v2
        with: 
          p12-file-base64: ${{ secrets.CERTIFICATE_BASE64_P12 }}
          p12-password: ${{ secrets.CERTIFICATE_PASSWORD }}

      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Initialize submodules
        run: git submodule update --init --recursive

      - name: Install localization package
        run: npm install -g i18n-auto-translation-msnyder

      - name: Translate files
        id: translate
        uses: msnyder-msft/i18n-auto-translation-action@v1.0.1
        with:
            provider: 'azure-official'
            subscriptionKey: '${{ secrets.AZURE_TRANSLATION_API_KEY }}'
            location: 'westus2'
            filePath: './src/LogVisualizer.I18N/I18NResources/en.json'
            from: 'en'
            to: 'zh'
            debug: false

      - name: Extract version from tag
        uses: damienaicheh/extract-version-from-tag-action@v1.1.0
      
      - name: Build osx-x64
        run: |
          chmod +x ${{env.OSX_SCRIPTS_DIR}}build.sh
          sh ${{env.OSX_SCRIPTS_DIR}}build.sh

      - name: Zip osx-x64 build
        run: cd ${{ env.OSX_APP_DIR }} && zip -r ../../../../../../${{env.OSX_APP_ZIP_Name}} ${{env.OSX_APP_Name}}
      
      - name: Upload macos artifact
        uses: actions/upload-artifact@v2
        with:
          name: macos-Build
          path: ./${{env.OSX_APP_ZIP_Name}}

  create-release:
    name: Create Release
    needs: [build-macos, build-windows]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download macos artifacts
        uses: actions/download-artifact@v2
        with:
          name: macos-Build
          path: ./${{env.OSX_APP_ZIP_Name}}

      - name: Download windows artifacts
        uses: actions/download-artifact@v2
        with:
          name: windows-Build
          path: ./${{ env.WIN_APP_ZIP_Name }}

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.TOKEN }}"
          prerelease: false
          draft: false
          title: Release ${{ github.ref_name }}
          files: |
            ./${{env.OSX_APP_ZIP_Name}}
            ./${{env.WIN_APP_ZIP_Name}}
            ./${{env.UPGRADE_INFO_PATH}}