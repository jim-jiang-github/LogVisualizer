name: CI

on:
  push:
    tags:
      - 'v\d+\.?\d+\.?\d+\.?'

  workflow_dispatch:

env:
    DOTNETVERSION: 7.0.x
    SLN_DIR: src\
    CSPROJ_DIR: src\LogVisualizer\
    BUILD_DIR: src\LogVisualizer\bin\Release\net6.0\win-x64\publish\
    UPGRADE_INFO_PATH: upgradeInfo.json

jobs:
  build:

    runs-on: windows-latest

    steps:
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v1.9.0
        with:
          dotnet-version: ${{env.DOTNETVERSION}}

      - name: Install 7Zip PowerShell Module
        shell: powershell
        run: Install-Module 7Zip4PowerShell -Force -Verbose

      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Initialize submodules
        run: git submodule update --init --recursive

      - name: Install localization package
        run: npm install -g i18n-auto-translation-msnyder

      - name: Translate files
        id: translate
        uses: msnyder-msft/i18n-auto-translation-action@v1.0.1
        with:
            provider: 'azure-official'
            subscriptionKey: '${{ secrets.AZURE_TRANSLATION_API_KEY }}'
            location: 'westus2'
            filePath: './src/LogVisualizer.I18N/I18NResources/en.json'
            from: 'en'
            to: 'zh'
            debug: false

      - name: Extract version from tag
        uses: damienaicheh/extract-version-from-tag-action@v1.1.0

      - name: Install dependencies
        run: dotnet restore ${{env.SLN_DIR}}\LogVisualizer.sln

      - name: Build win-x64
        run: dotnet publish ${{env.CSPROJ_DIR}}\LogVisualizer.csproj -r win-x64 -p:Configuration=Release -p:PublishSingleFile=true -p:PublishReadyToRun=true -p:IncludeNativeLibrariesForSelfExtract=true --self-contained true -p:PublishTrimmed=True -p:TrimMode=CopyUsed -property:Version='${{ env.MAJOR }}.${{ env.MINOR }}.${{ env.PATCH }}.${{ env.NUMBER_OF_COMMITS }}'

      - name: Zip win-x64 build
        shell: powershell
        run: Compress-7Zip ${{ env.BUILD_DIR }} -ArchiveFileName windows-x64.zip -Format Zip

      - name: Collect win-x64 artifacts
        uses: actions/upload-artifact@v2.3.1
        with:
          name: windows-x64
          path: ${{ env.BUILD_DIR }}

      #- name: Build osx-x64
      #  run: dotnet publish ${{env.CSPROJ_DIR}}\LogVisualizer.csproj -r osx-x64 -p:Configuration=Release -p:PublishReadyToRun=true -p:IncludeNativeLibrariesForSelfExtract=true -p:IncludeAllContentForSelfExtract=true --self-contained true -property:Version='${{ env.MAJOR }}.${{ env.MINOR }}.${{ env.PATCH }}.${{ env.NUMBER_OF_COMMITS }}'

      #- name: Zip osx-x64 build
      #  shell: powershell
      #  run: Compress-7Zip ${{ env.BUILD_DIR }} -ArchiveFileName macOS-x64.zip -Format Zip

      #- name: Collect osx-x64 artifacts
      #  uses: actions/upload-artifact@v2.3.1
      #  with:
      #    name: macOS-x64
      #    path: ${{ env.BUILD_DIR }}

      #- name: Build osx-arm64
      #  run: dotnet publish ${{env.CSPROJ_DIR}}\LogVisualizer.csproj -r osx-arm64 -p:Configuration=Release -p:PublishReadyToRun=true -p:IncludeNativeLibrariesForSelfExtract=true -p:IncludeAllContentForSelfExtract=true --self-contained true -property:Version='${{ env.MAJOR }}.${{ env.MINOR }}.${{ env.PATCH }}.${{ env.NUMBER_OF_COMMITS }}'

      #- name: Zip osx-arm64 build
      #  shell: powershell
      #  run: Compress-7Zip ${{ env.BUILD_DIR }} -ArchiveFileName macOS-arm64.zip -Format Zip

      #- name: Collect osx-arm64 artifacts
      #  uses: actions/upload-artifact@v2.3.1
      #  with:
      #    name: macOS-arm64
      #    path: ${{ env.BUILD_DIR }}

      # upgradeInfo
      - name: Collect upgradeInfo artifacts
        uses: actions/upload-artifact@v2.3.1
        with:
          name: upgradeInfo
          path: ${{ env.UPGRADE_INFO_PATH }}

      # Release Management
      - name: Delete release drafts
        uses: hugo19941994/delete-draft-releases@v1.0.0
        with:
          threshold: 1s
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.TOKEN }}"
          prerelease: false
          draft: false
          title: Release ${{ github.ref_name }}
          files: |
            ./windows-x64.zip
            ./upgradeInfo.json